stages:
#  - build
#  - test
  - metadata-screenshots
  - deploy-staging
#  - promote-production

variables:
  FLUTTER_PROJECT_PATH: 'apps/charadex'
  SECURE_FILES_DOWNLOAD_PATH: '$FLUTTER_PROJECT_PATH/.secure_files'
  PUB_CACHE: '$FLUTTER_PROJECT_PATH/.pub_cache'

  LANG: "en_US.UTF-8"
  LC_ALL: "en_US.UTF-8"

  # ensure shell executor sees Homebrew and pubâ€‘cache bins
  PATH: "$HOME/.rbenv/shims:$HOME/.rbenv/bin:/opt/homebrew/bin:$HOME/.pub-cache/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
  # PATH: "/opt/homebrew/bin:$HOME/.pub-cache/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"

# Reusable job for setting up secure files
.setup_secure_ios_files_charadex: &setup_secure_ios_files_charadex
  before_script:
    # - source ~/.zshrc || true
    - eval "$(rbenv init - bash)"      # enable rbenv in this shell
    - ruby -v                          # sanity check: should say 3.x.x
    # Download and set up secure ios files
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
    - ls -lah $SECURE_FILES_DOWNLOAD_PATH
    - cp $SECURE_FILES_DOWNLOAD_PATH/ios-fastlane.env.ci $FLUTTER_PROJECT_PATH/ios/fastlane/.env.default
    - cp $SECURE_FILES_DOWNLOAD_PATH/ios-AuthKey_Fastlane_9U36FG7Z7G.json $FLUTTER_PROJECT_PATH/ios/fastlane/AuthKey_Fastlane_9U36FG7Z7G.json
    # 3. use FVM to install & switch to the version from .fvmrc
    - cd $FLUTTER_PROJECT_PATH
    # - fvm install       # reads .fvmrc, downloads specified Flutter SDK
    - fvm use           # sets up .fvm/flutter_sdk symlink

.macos_saas_runners:
  tags:
    - macos-apple
  before_script:
    - echo "started by ${GITLAB_USER_NAME} / @${GITLAB_USER_LOGIN}"


# TODO ENABLE ANDROID PROJECT LATER ON
# .android_common_charadex: &android_common_charadex
#   before_script:
#     - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
#     - cp $SECURE_FILES_DOWNLOAD_PATH/android-snappy-boulder-435409-c4-014d2562d048.json $FLUTTER_PROJECT_PATH/android/fastlane/snappy-boulder-435409-c4-014d2562d048.json
#     - cp $SECURE_FILES_DOWNLOAD_PATH/android-upload-keystore.jks $FLUTTER_PROJECT_PATH/android/upload-keystore.jks
#     - cp $SECURE_FILES_DOWNLOAD_PATH/android-key.properties $FLUTTER_PROJECT_PATH/android/key.properties


# Setup job to run once and prepare the environment
build_ios_charadex:
  stage: build
  extends:
    - .macos_saas_runners
    - .setup_secure_ios_files_charadex
  when: manual
  script:
    - echo "Starting build_ios_charadex, initial PWD $(pwd)"
    - fvm flutter pub get
    - cd ios
    - |
      if [ -f "Podfile" ]; then
        pod install --repo-update
      else
        echo "No Podfile found, skipping CocoaPods setup."
      fi
    # 1) configure Bundler to install into the project
    - bundle config set --local path vendor/bundle
    - bundle config set --local deployment 'true'

    # 2) install gems (fastlane + plugins) into ios/vendor/bundle
    - bundle install --jobs=4
    - bundle exec fastlane build_development

# Test job which uses the build artifacts, depends on build_ios_job
test_ios_charadex:
  stage: test
  extends:
    - .macos_saas_runners
    - .setup_secure_ios_files_charadex
  when: manual
  script:
    # Run Flutter tests without rebuilding
    - fvm flutter pub get
    - fvm flutter test

deploy_testflight_charadex:
  stage: deploy-staging
  extends:
    - .macos_saas_runners
    - .setup_secure_ios_files_charadex
  when: manual
  script:
    - fvm flutter pub get
    - cd ios
    - |
      if [ -f "Podfile" ]; then
        pod install --repo-update
      else
        echo "No Podfile found, skipping CocoaPods setup."
      fi
    # 1) configure Bundler to install into the project
    - bundle config set --local path vendor/bundle
    - bundle config set --local deployment 'true'

    # 2) install gems (fastlane + plugins) into ios/vendor/bundle
    - bundle install --jobs=4
    - bundle exec fastlane build_and_upload_testflight

#promote_to_production_charadex:
#  stage: promote-production
#  extends:
#    - .macos_saas_runners
#    - .setup_secure_ios_files_charadex
#  when: manual
#  script:
#    - cd ios
#    # 1) configure Bundler to install into the project
#    - bundle config set --local path vendor/bundle
#    - bundle config set --local deployment 'true'
#
#    # 2) install gems (fastlane + plugins) into ios/vendor/bundle
#    - bundle install --jobs=4
#    - bundle exec fastlane upload_testflight_to_production
#  needs:
#    - deploy_testflight_charadex

update_metadata_charadex:
  stage: metadata-screenshots
  extends:
    - .macos_saas_runners
    - .setup_secure_ios_files_charadex
  when: manual
  script:
    - cd ios
    # 1) configure Bundler to install into the project
    - bundle config set --local path vendor/bundle
    - bundle config set --local deployment 'true'

    # 2) install gems (fastlane + plugins) into ios/vendor/bundle
    - bundle install --jobs=4
    - bundle exec fastlane update_metadata
  # needs:
  #   - deploy_testflight_charadex

update_screenshots_charadex:
  stage: metadata-screenshots
  extends:
    - .macos_saas_runners
    - .setup_secure_ios_files_charadex
  when: manual
  script:
    - cd ios
    # 1) configure Bundler to install into the project
    - bundle config set --local path vendor/bundle
    - bundle config set --local deployment 'true'

    # 2) install gems (fastlane + plugins) into ios/vendor/bundle
    - bundle install --jobs=4
    - bundle exec fastlane update_screenshots
  # needs:
  #   - deploy_testflight_charadex

# TODO ENABLE ANDROID LATER ON

# android_build_charadex:
#   image: harbor.cloud.ementio.com/library/flutter_builder:20241003
#   stage: build
# #  tags:
# #    - macos-silicon-sven
#   before_script:
#     - !reference [ .android_common_charadex, before_script ]
#     - export GRADLE_USER_HOME=$CI_PROJECT_DIR/.gradle
#     - export PUB_CACHE=$CI_PROJECT_DIR/.pub-cache
#     - export PATH="$PATH":"$PUB_CACHE/bin"
#   cache:
#     key: android-build-cache
#     paths:
#       - $FLUTTER_PROJECT_PATH/build/app/outputs/bundle/release
#       - $CI_PROJECT_DIR/.pub-cache/
#       - $GRADLE_USER_HOME/caches/
#       - $GRADLE_USER_HOME/wrapper/
#       - $GRADLE_USER_HOME/build-cache/
# #      - .pub-cache
#   script:
#     - cd $FLUTTER_PROJECT_PATH
#     - dart run build_runner clean
#     - dart run build_runner build --delete-conflicting-outputs
#     - cd android
#     - bundle install
#     - bundle update fastlane
#     - bundle exec fastlane build_appbundle
#   artifacts:
#     paths:
#       - $FLUTTER_PROJECT_PATH/build/app/outputs/bundle/release/app-release.aab
#     expire_in: 1 week

# android_test_charadex:
#   image: harbor.cloud.ementio.com/library/flutter_builder:20241003
#   stage: test
# #  tags:
# #    - macos-silicon-sven
#   extends: .android_common_charadex
#   script:
#     - cd $FLUTTER_PROJECT_PATH
#     - cd android
#     - bundle install
#     - bundle exec fastlane test

# android_deploy_charadex:
#   image: harbor.cloud.ementio.com/library/flutter_builder:20241003
#   stage: deploy-staging
#   extends: .android_common_charadex
#   needs:
#     - android_build_charadex
#   tags:
#     - android
#   script:
#     - cd $FLUTTER_PROJECT_PATH
#     - cd android
#     - bundle install
#     - bundle exec fastlane upload_to_internal_track
#   when: manual

# android_promote_to_production_charadex:
#   image: harbor.cloud.ementio.com/library/flutter_builder:20241003
#   stage: promote-production
#   extends: .android_common_charadex
#   when: manual
#   script:
#     - cd $FLUTTER_PROJECT_PATH
#     - cd android
#     - bundle install
#     - bundle exec fastlane promote_to_production

