stages:
  - deploy-staging
  - metadata-screenshots

variables:
  FLUTTER_PROJECT_PATH: '.'
  SECURE_FILES_DOWNLOAD_PATH: '$FLUTTER_PROJECT_PATH/.secure_files'
  PUB_CACHE: '$FLUTTER_PROJECT_PATH/.pub_cache'

  LANG: "en_US.UTF-8"
  LC_ALL: "en_US.UTF-8"

  # ensure shell executor sees Homebrew and pubâ€‘cache bins
  PATH: "$HOME/.rbenv/shims:$HOME/.rbenv/bin:/opt/homebrew/bin:$HOME/.pub-cache/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"

# Reusable job for setting up secure files
.setup_secure_ios_files_charadex: &setup_secure_ios_files_charadex
  before_script:
    # - source ~/.zshrc || true
    - eval "$(rbenv init - bash)"      # enable rbenv in this shell
    - ruby -v                          # sanity check: should say 3.x.x
    # Download and set up secure ios files
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
    - ls -lah $SECURE_FILES_DOWNLOAD_PATH
    - cp $SECURE_FILES_DOWNLOAD_PATH/ios-fastlane.env.ci $FLUTTER_PROJECT_PATH/ios/fastlane/.env.default
    - cp $SECURE_FILES_DOWNLOAD_PATH/ios-AuthKey_Fastlane_9U36FG7Z7G.json $FLUTTER_PROJECT_PATH/ios/fastlane/AuthKey_Fastlane_9U36FG7Z7G.json
    # 3. use FVM to install & switch to the version from .fvmrc
    - cd $FLUTTER_PROJECT_PATH
    # - fvm install       # reads .fvmrc, downloads specified Flutter SDK
    - fvm use           # sets up .fvm/flutter_sdk symlink

.macos_saas_runners:
  tags:
    - macos-apple
  before_script:
    - echo "started by ${GITLAB_USER_NAME} / @${GITLAB_USER_LOGIN}"

deploy_testflight_charadex:
  stage: deploy-staging
  extends:
    - .macos_saas_runners
    - .setup_secure_ios_files_charadex
  when: manual
  script:
    - fvm flutter pub get
    - cd ios
    - |
      if [ -f "Podfile" ]; then
        pod install --repo-update
      else
        echo "No Podfile found, skipping CocoaPods setup."
      fi
    # 1) configure Bundler to install into the project
    - bundle config set --local path vendor/bundle
    - bundle config set --local deployment 'true'

    # 2) install gems (fastlane + plugins) into ios/vendor/bundle
    - bundle install --jobs=4
    - bundle exec fastlane build_and_upload_testflight

update_metadata_charadex:
  stage: metadata-screenshots
  extends:
    - .macos_saas_runners
    - .setup_secure_ios_files_charadex
  when: manual
  script:
    - cd ios
    # 1) configure Bundler to install into the project
    - bundle config set --local path vendor/bundle
    - bundle config set --local deployment 'true'

    # 2) install gems (fastlane + plugins) into ios/vendor/bundle
    - bundle install --jobs=4
    - bundle exec fastlane update_metadata
